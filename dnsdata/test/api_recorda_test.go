/*
Infoblox WAPI Swagger for DNS ( wapi version - 2.12.3 )

Testing RecordaAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package dnsdata

import (
	"context"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"

	"github.com/unasra/nios-go-client/dnsdata"
)

func TestRecordaAPIService(t *testing.T) {

	apiClient := dnsdata.NewAPIClient()

	t.Run("Test RecordaAPIService WapiV2123RecordaGet", func(t *testing.T) {

		//t.Skip("skip test") // remove to run test

		resp, httpRes, _ := apiClient.RecordaAPI.WapiV2123RecordaGet(context.Background()).Execute()

		//require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RecordaAPIService WapiV2123RecordaPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.RecordaAPI.WapiV2123RecordaPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RecordaAPIService WapiV2123RecordaRecordaReferenceDelete", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var recordaReference string

		resp, httpRes, err := apiClient.RecordaAPI.WapiV2123RecordaRecordaReferenceDelete(context.Background(), recordaReference).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RecordaAPIService WapiV2123RecordaRecordaReferenceGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var recordaReference string

		resp, httpRes, err := apiClient.RecordaAPI.WapiV2123RecordaRecordaReferenceGet(context.Background(), recordaReference).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RecordaAPIService WapiV2123RecordaRecordaReferencePut", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var recordaReference string

		resp, httpRes, err := apiClient.RecordaAPI.WapiV2123RecordaRecordaReferencePut(context.Background(), recordaReference).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
