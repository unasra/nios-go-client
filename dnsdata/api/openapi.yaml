openapi: 3.0.0
info:
  contact:
    name: Infoblox
    url: https://www.infoblox.com
  description: OpenAPI 3.x.x specification for the IbClient API
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://www.infoblox.com
  title: Infoblox WAPI Swagger for DNS ( wapi version - 2.12.3 )
  version: 2.12.3
servers:
- url: /
tags:
- description: Operations about ** record:a ** objects
  name: recordA
paths:
  /wapi/v2.12.3/record:a:
    get:
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          default: 0
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: "Select 1 if paging is required. If SET, _max_results and _return_as_object\
          \ must be entered."
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          default: 0
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Enter the page ID for fetching the next page
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - description: Enter the value of the field
        explode: true
        in: query
        name: comment
        required: false
        schema:
          type: string
        style: form
      - description: Enter the value of the field
        explode: true
        in: query
        name: creator
        required: false
        schema:
          type: string
        style: form
      - description: Enter the value of the field
        explode: true
        in: query
        name: ddns_principal
        required: false
        schema:
          type: string
        style: form
      - description: Enter the value of the field
        explode: true
        in: query
        name: ipv4addr
        required: false
        schema:
          type: string
        style: form
      - description: Enter the value of the field
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Enter the value of the field
        explode: true
        in: query
        name: reclaimable
        required: false
        schema:
          type: string
        style: form
      - description: Enter the value of the field
        explode: true
        in: query
        name: view
        required: false
        schema:
          type: string
        style: form
      - description: Enter the value of the field
        explode: true
        in: query
        name: zone
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/record_a'
          description: OK
      summary: List all A records
      tags:
      - record:a
    post:
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordARequest'
        description: Enter the request body here
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/record_a'
          description: Created
      security:
      - basicAuth: []
      tags:
      - record:a
      x-tf-resource: dns_a_record
      x-tf-datasource: dns_a_records
  /wapi/v2.12.3/record:a/{record:a_reference}:
    delete:
      description: Delete the record:a resource
      parameters:
      - description: Enter the reference for record:a
        explode: false
        in: path
        name: record:a_reference
        required: true
        schema:
          example: resourceID:resourceName
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_wapi_v2_12_3_record_a__record_a_reference__delete_200_response'
          description: OK
      security:
      - basicAuth: []
      tags:
      - record:a
    get:
      parameters:
      - description: Enter the reference for record:a
        explode: false
        in: path
        name: record:a_reference
        required: true
        schema:
          example: resourceID:resourceName
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          default: 0
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/record_a'
          description: OK
      security:
      - basicAuth: []
      tags:
      - record:a
    put:
      description: Update the record:a resource
      parameters:
      - description: Enter the reference for record:a
        explode: false
        in: path
        name: record:a_reference
        required: true
        schema:
          example: resourceID:resourceName
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordARequest'
        description: Enter the request body here
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/record_a'
          description: OK
      security:
      - basicAuth: []
      tags:
      - record:a
components:
  parameters:
    ReturnFields:
      description: Enter the field names followed by comma
      explode: true
      in: query
      name: _return_fields
      required: false
      schema:
        type: string
      style: form
    ReturnFieldsPlus:
      description: "Enter the field names followed by comma, this returns the required\
        \ fields along with the default fields"
      explode: true
      in: query
      name: _return_fields+
      required: false
      schema:
        type: string
      style: form
    MaxResults:
      description: Enter the number of results to be fetched
      explode: true
      in: query
      name: _max_results
      required: false
      schema:
        minimum: 1
        type: integer
      style: form
    ReturnAsObject:
      description: Select 1 if result is required as an object
      explode: true
      in: query
      name: _return_as_object
      required: false
      schema:
        default: 0
        enum:
        - 0
        - 1
        type: integer
      style: form
    Paging:
      description: "Select 1 if paging is required. If SET, _max_results and _return_as_object\
        \ must be entered."
      explode: true
      in: query
      name: _paging
      required: false
      schema:
        default: 0
        enum:
        - 0
        - 1
        type: integer
      style: form
    PageId:
      description: Enter the page ID for fetching the next page
      explode: true
      in: query
      name: _page_id
      required: false
      schema:
        type: string
      style: form
    Comment:
      description: Enter the value of the field
      explode: true
      in: query
      name: comment
      required: false
      schema:
        type: string
      style: form
    Creator:
      description: Enter the value of the field
      explode: true
      in: query
      name: creator
      required: false
      schema:
        type: string
      style: form
    DdnsPrincipal:
      description: Enter the value of the field
      explode: true
      in: query
      name: ddns_principal
      required: false
      schema:
        type: string
      style: form
    Ipv4Addr:
      description: Enter the value of the field
      explode: true
      in: query
      name: ipv4addr
      required: false
      schema:
        type: string
      style: form
    Name:
      description: Enter the value of the field
      explode: true
      in: query
      name: name
      required: false
      schema:
        type: string
      style: form
    Reclaimable:
      description: Enter the value of the field
      explode: true
      in: query
      name: reclaimable
      required: false
      schema:
        type: string
      style: form
    View:
      description: Enter the value of the field
      explode: true
      in: query
      name: view
      required: false
      schema:
        type: string
      style: form
    Zone:
      description: Enter the value of the field
      explode: true
      in: query
      name: zone
      required: false
      schema:
        type: string
      style: form
    RecordAReference:
      description: Enter the reference for record:a
      explode: false
      in: path
      name: record:a_reference
      required: true
      schema:
        example: resourceID:resourceName
        type: string
      style: simple
  schemas:
    record_a:
      example:
        creation_time: timestamp
        aws_rte53_record_info: awsrte53recordinfo
        creator: STATIC
        extattrs: extattr
        shared_record_group: shared_record_group
        use_ttl: true
        discovered_data: discoverydata
        cloud_info: grid:cloudapi:info
        ddns_protected: true
        ipv4addr: ipv4addr
        ttl: 0
        dns_name: dns_name
        ms_ad_user_data: msserver:aduser:data
        view: view
        zone: zone
        ddns_principal: ddns_principal
        disable: true
        name: name
        remove_associated_ptr: true
        comment: comment
        last_queried: timestamp
        forbid_reclamation: true
        reclaimable: true
      properties:
        aws_rte53_record_info:
          description: Aws Route 53 record information.
          enum:
          - awsrte53recordinfo
          type: string
        cloud_info:
          description: Structure containing all cloud API related information for
            this object.
          enum:
          - grid:cloudapi:info
          type: string
        comment:
          description: Comment for the record; maximum 256 characters.
          type: string
        creation_time:
          description: The time of the record creation in Epoch seconds format.
          enum:
          - timestamp
          type: string
        creator:
          description: The record creator.
          enum:
          - STATIC
          - DYNAMIC
          - SYSTEM
          type: string
        ddns_principal:
          description: The GSS-TSIG principal that owns this record.
          type: string
        ddns_protected:
          description: Determines if the DDNS updates for this record are allowed
            or not.
          type: boolean
        disable:
          description: Determines if the record is disabled or not. False means that
            the record is enabled.
          type: boolean
        discovered_data:
          description: The discovered data for this A record.
          enum:
          - discoverydata
          type: string
        dns_name:
          description: The name for an A record in punycode format.
          type: string
        extattrs:
          description: Extensible attributes associated with the object.
          enum:
          - extattr
          type: string
        forbid_reclamation:
          description: Determines if the reclamation is allowed for the record or
            not.
          type: boolean
        ipv4addr:
          description: The IPv4 Address of the record.
          type: string
        last_queried:
          description: The time of the last DNS query in Epoch seconds format.
          enum:
          - timestamp
          type: string
        ms_ad_user_data:
          description: The Microsoft Active Directory user related information.
          enum:
          - msserver:aduser:data
          type: string
        name:
          description: Name for A record in FQDN format.
          type: string
        reclaimable:
          description: Determines if the record is reclaimable or not.
          type: boolean
        remove_associated_ptr:
          description: Whether to remove associated PTR records while deleting the
            A record.
          type: boolean
        shared_record_group:
          description: The shared record group this record belongs to.
          type: string
        ttl:
          description: "Time-to-live value of the record, in seconds."
          type: integer
        use_ttl:
          description: Flag to indicate whether the TTL value should be used for the
            A record.
          type: boolean
        view:
          description: View that this record is part of.
          type: string
        zone:
          description: The zone in which the record resides.
          type: string
      type: object
    RecordARequest:
      example:
        creator: STATIC
        view: view
        extattrs: extattrs
        ddns_principal: ddns_principal
        disable: true
        use_ttl: true
        name: name
        comment: comment
        ddns_protected: true
        forbid_reclamation: true
        ipv4addr: ipv4addr
        ttl: 0
      properties:
        comment:
          type: string
        creator:
          enum:
          - STATIC
          - DYNAMIC
          - SYSTEM
          type: string
        ddns_principal:
          type: string
        ddns_protected:
          type: boolean
        disable:
          type: boolean
        extattrs:
          type: string
        forbid_reclamation:
          type: boolean
        ipv4addr:
          type: string
        name:
          type: string
        ttl:
          type: integer
        use_ttl:
          type: boolean
        view:
          type: string
      type: object
    _wapi_v2_12_3_record_a__record_a_reference__delete_200_response:
      example:
        ref: ref
      properties:
        ref:
          description: Reference of the deleted record:a
          type: string
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
